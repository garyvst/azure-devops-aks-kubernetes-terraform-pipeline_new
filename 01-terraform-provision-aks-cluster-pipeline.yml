

trigger:
- master

pool:
  vmImage: ubuntu-latest

stages:
  - stage: TerraformValidate
    jobs:
      - job: TerraformValidateJob
        continueOnError: false
        steps:          
        - task: PublishPipelineArtifact@1
          displayName: Publish Artifact
          inputs:
            targetPath: '$(System.DefaultWorkingDirectory)/Git-Repo-Files/terraform-manifests'
            artifact: 'terraform-manifests-out'
            publishLocation: 'pipeline'
        - task: TerraformInstaller@0
          displayName: Terrafrom Install
          inputs:
            terraformVersion: 'latest'

        - task: TerraformCLI@0
          displayName: Terraform Init
          inputs:
            command: 'init'
            workingDirectory: '$(System.DefaultWorkingDirectory)/Git-Repo-Files//terraform-manifests'
            backendType: 'azurerm'
            backendServiceArm: 'terraform-aks-azurerm-svc-con'
            ensureBackend: true
            backendAzureRmResourceGroupName: 'terraform-storage-rgg'
            backendAzureRmResourceGroupLocation: 'eastus'
            backendAzureRmStorageAccountName: 'terraformstatexlrwdrzsg'
            backendAzureRmContainerName: 'tfstatefilesg'
            backendAzureRmKey: 'aks-base.tfstate'
            allowTelemetryCollection: false
        - task: TerraformCLI@0
          displayName: Terraform Validate
          inputs:
            command: 'validate'
            workingDirectory: '$(System.DefaultWorkingDirectory)/Git-Repo-Files//terraform-manifests'
            allowTelemetryCollection: false
